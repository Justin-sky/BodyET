syntax = "proto3";
package ETModel;
message M2M_TrasferUnitRequest // IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
	Unit Unit = 3;
}
message M2M_TrasferUnitResponse // IActorResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 InstanceId = 4;
}
message M2A_Reload // IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
}
message A2M_Reload // IActorResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}
message G2G_LockRequest // IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
	int64 Id = 3;
	string Address = 4;
}
message G2G_LockResponse // IActorResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}
message G2G_LockReleaseRequest // IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
	int64 Id = 3;
	string Address = 4;
}
message G2G_LockReleaseResponse // IActorResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}
message ObjectAddRequest // IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
	int64 Key = 3;
	int64 InstanceId = 4;
}
message ObjectAddResponse // IActorResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}
message ObjectLockRequest // IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
	int64 Key = 3;
	int64 InstanceId = 4;
	int32 Time = 5;
}
message ObjectLockResponse // IActorResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}
message ObjectUnLockRequest // IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
	int64 Key = 3;
	int64 OldInstanceId = 4;
	int64 InstanceId = 5;
}
message ObjectUnLockResponse // IActorResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}
message ObjectRemoveRequest // IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
	int64 Key = 3;
}
message ObjectRemoveResponse // IActorResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}
message ObjectGetRequest // IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
	int64 Key = 3;
}
message ObjectGetResponse // IActorResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 InstanceId = 4;
}
message R2G_GetLoginKey // IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
	string Account = 3;
}
message G2R_GetLoginKey // IActorResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 Key = 4;
	int64 GateId = 5;
}
message G2M_CreateUnit // IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
	int64 PlayerId = 3;
	int64 GateSessionId = 4;
	int64 UnitId = 5;
}
message M2G_CreateUnit // IActorResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 UnitId = 4;
	repeated UnitInfo Units = 5;
}
message G2M_SessionDisconnect // IActorLocationMessage
{
	int32 RpcId = 1;
	int64 ActorId = 2;
}
